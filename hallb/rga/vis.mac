# Use this open statement to create an OpenGL view:
/vis/open OGL 800x800-0+0

# Disable auto refresh and quieten vis messages whilst scene and trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors

# Draw geometry:
/vis/drawVolume

# Specify view angle:
/vis/viewer/set/viewpointThetaPhi 90. 180.

# Specify style (surface, wireframe, auxiliary edges,...)
#/vis/viewer/set/style wireframe
/vis/viewer/set/auxiliaryEdge true
/vis/viewer/set/lineSegmentsPerCircle 100

# Draw coordinate axes:
# /vis/scene/add/axes 0 0 0 10 cm

# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 1


# Draw hits at end of event:
#/vis/scene/add/hits

# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate


# Make the "World" box invisible
/vis/geometry/set/visibility World 0 false

# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings

/vis/viewer/addCutawayPlane
#/vis/geometry/set/forceCloud target_cell_logical

# cyan background color
/vis/viewer/set/background 0.9 1.0 1.0 1.0
#/vis/touchable/set/numberOfCloudPoints 100000
